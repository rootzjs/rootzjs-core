/** @license RootzJs v2.0.7
 ** @author Trishanth Naidu
 ** @github https://github.com/rootzjs/core v2.0.7
 * react-jsx-dev-runtime.development.js
 * Copyright 2019 Trishanth Naidu
 * Copyright (c) Rootz Js,and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.getAllNodes=exports.getProfile=exports.addProfile=exports.createNode=void 0;var _react=_interopRequireDefault(require("react")),_logsMin=require("./logs-min");function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}function _defineProperty(t,e,o){return e in t?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o,t}(0,_logsMin.logger)(_logsMin.logType.bra,"%cUse Rootz DevTools for better debugging experience: https://devtools.rootzjs.org");let bus={};const store={},setImmutableObject=(t,e)=>Object.assign({},t,e),setImmutableArray=(t,e)=>[...t,...e],requestUpdate=function(t){const e=store[t].scope,o=e.state.rootzStateHandlerVariable+1;e.updater.enqueueSetState(e,{rootzStateHandlerVariable:o})},addProfile=function(t){bus=setImmutableObject(bus,t)};exports.addProfile=addProfile;const now=t=>performance.measure(t),getAllNodes=function(){return store};exports.getAllNodes=getAllNodes;const getProfile=function(){return bus};exports.getProfile=getProfile,now("@@APP_INIT");const dispatchNode=({id:t,state:e,actions:o,contract:r,updateIf:s,Component:i})=>{if(null===i)throw(0,_logsMin.logger)(_logsMin.logType.err,_logsMin.logMap.NODE_WITHOUT_COMPONENT(t)),new Error;return{[t]:class extends _react.default.PureComponent{constructor(t){super(t),_defineProperty(this,"shouldComponentUpdate",s),this.state={rootzStateHandlerVariable:0}}componentDidMount(){now(t)}componentDidUpdate(){now(t+"_update")}render(){const e=store[t].state;store[t].scope=setImmutableObject(store[t].scope,this);const s=getProfile();return _react.default.createElement(i,{state:e,profile:s,props:this.props,actions:{...o,...r}})}}}[t]},NodeC=function(t,e){this.id=t,this.actions={},this.contract={},this.Component=e};NodeC.prototype.defineState=function(t){if("object"!=typeof t)throw(0,_logsMin.logger)(_logsMin.logType.err,_logsMin.logMap.INVALID_TYPE_IN_DEFINE_STATE_REQUIRED_OBJECT(this.id)),new Error;store[this.id].state=setImmutableObject(store[this.id].state,t),this.state=t||{}},NodeC.prototype.createContract=function(t,e,o){if(store.hasOwnProperty(t))throw(0,_logsMin.logger)(_logsMin.logType.err,_logsMin.logMap.INVAID_TYPE_NODE_ID_IN_CONTRACT(this.id,t)),new Error;if("string"!=typeof e)throw(0,_logsMin.logger)(_logsMin.logType.err,_logsMin.logMap.INVALID_TYPE_IN_CREATE_CONTRACT_REQUIRED_STRING(this.id,e)),new Error;if("object"!=typeof o&&"function"!=typeof o)throw(0,_logsMin.logger)(_logsMin.logType.err,_logsMin.logMap.INVALID_TYPE_IN_CREATE_CONTRACT_REQUIRED_OBJECT_OR_FUNCTION(this.id,e)),new Error;if("object"==typeof o){let r={};r[e]=(()=>{now("$"+e),store["#"+t].state=setImmutableObject(store["#"+t].state,o),requestUpdate("#"+t)}),store[this.id].contract=setImmutableArray(store[this.id].contract,[e]),this.contract=setImmutableObject(this.contract,r)}else this.createContractCallback(t,e,o)},NodeC.prototype.createAction=function(t,e){if("string"!=typeof t)throw(0,_logsMin.logger)(_logsMin.logType.err,_logsMin.logMap.INVALID_TYPE_IN_CREATE_ACTION_REQUIRED_STRING(this.id,t)),new Error;if("object"!=typeof e&&"function"!=typeof e)throw(0,_logsMin.logger)(_logsMin.logType.err,_logsMin.logMap.INVALID_TYPE_IN_CREATE_ACTION_REQUIRED_OBJECT_OR_FUNCTION(this.id,t)),new Error;if("object"==typeof e){let o={};o[t]=(()=>{now("$"+t),store[this.id].state=setImmutableObject(store[this.id].state,e),requestUpdate(this.id)}),store[this.id].actions=setImmutableArray(store[this.id].actions,[t]),this.actions=setImmutableObject(this.actions,o)}else"function"==typeof e&&this.createActionCallback(t,e)},NodeC.prototype.createActionCallback=function(t,e){if("string"!=typeof t)throw(0,_logsMin.logger)(_logsMin.logType.err,_logsMin.logMap.INVALID_TYPE_IN_CREATEACTIONMETHODS_REQUIRED_STRING(this.id,t)),new Error;if("function"!=typeof e)throw(0,_logsMin.logger)(_logsMin.logType.err,_logsMin.logMap.INVALID_TYPE_IN_CREATEACTIONMETHODS_REQUIRED_FUNCTION(this.id,t)),new Error;let o={};o[t]=((...o)=>{now("$"+t);const r=e(...o);store[this.id].state=setImmutableObject(store[this.id].state,r),requestUpdate(this.id)}),store[this.id].actions=setImmutableArray(store[this.id].actions,[t]),this.actions=setImmutableObject(this.actions,o)},NodeC.prototype.createContractCallback=function(t,e,o){if(store.hasOwnProperty(t))throw(0,_logsMin.logger)(_logsMin.logType.err,_logsMin.logMap.INVAID_TYPE_NODE_ID_IN_CONTRACT_CALLBACK(this.id,t)),new Error;if("string"!=typeof e)throw(0,_logsMin.logger)(_logsMin.logType.err,_logsMin.logMap.INVALID_TYPE_IN_CREATEACTIONMETHODS_REQUIRED_STRING(this.id,e)),new Error;if("function"!=typeof o)throw(0,_logsMin.logger)(_logsMin.logType.err,_logsMin.logMap.INVALID_TYPE_IN_CREATEACTIONMETHODS_REQUIRED_FUNCTION(this.id,e)),new Error;let r={};r[e]=((...r)=>{now("$"+e);const s=o(...r);store["#"+t].state=setImmutableObject(store["#"+t].state,s),requestUpdate("#"+t)}),store[this.id].contract=setImmutableArray(store[this.id].contract,[e]),this.actions=setImmutableObject(this.actions,r)};const createNode=function(t,e){if(2!=arguments.length)throw(0,_logsMin.logger)(_logsMin.logType.err,_logsMin.logMap.NODE_INTERFACE_LENGTH(t)),new Error;const o="#"+t;if(store.hasOwnProperty(o))throw(0,_logsMin.logger)(_logsMin.logType.err,_logsMin.logMap.NODE_NAME_ALREADY_EXISTS(t)),new Error;const r=new NodeC(o,e);return store[o]={actions:[],contract:[],state:{},scope:{}},[r,dispatchNode]};exports.createNode=createNode;